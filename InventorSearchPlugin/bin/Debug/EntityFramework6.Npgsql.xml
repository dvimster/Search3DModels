<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework6.Npgsql</name>
    </assembly>
    <members>
        <member name="T:Npgsql.NpgsqlConnectionFactory">
            <summary>
            Instances of this class are used to create DbConnection objects for Postgresql
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlConnectionFactory.CreateConnection(System.String)">
            <summary>
            Creates a connection for Postgresql for the given connection string.
            </summary>
            <param name="nameOrConnectionString">The connection string.</param>
            <returns>An initialized DbConnection.</returns>
        </member>
        <member name="T:Npgsql.NpgsqlMigrationSqlGenerator">
            <summary>
            Used to generate migration sql
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
            <summary>
            Generates the migration sql.
            </summary>
            <param name="migrationOperations">The operations in the migration</param>
            <param name="providerManifestToken">The provider manifest token used for server versioning.</param>
        </member>
        <member name="M:Npgsql.NpgsqlMigrationSqlGenerator.GetTableNameFromFullTableName(System.String)">
            <summary>
            Removes schema prefix e.g. "dto.Blogs" returns "Blogs" and "Posts" returns "Posts"
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:Npgsql.NpgsqlRankingNormalization">
            <summary>
            Specifies whether and how a document's length should impact its rank.
            This is used with the ranking functions in <see cref="T:Npgsql.NpgsqlTextFunctions" />.
            
            See http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            for more information about the behaviors that are controlled by this value.
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlRankingNormalization.Default">
            <summary>
            Ignores the document length.
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlRankingNormalization.DivideBy1PlusLogLength">
            <summary>
            Divides the rank by 1 + the logarithm of the document length.
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlRankingNormalization.DivideByLength">
            <summary>
            Divides the rank by the document length.
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlRankingNormalization.DivideByMeanHarmonicDistanceBetweenExtents">
            <summary>
            Divides the rank by the mean harmonic distance between extents (this is implemented only by ts_rank_cd).
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlRankingNormalization.DivideByUniqueWordCount">
            <summary>
            Divides the rank by the number of unique words in document.
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlRankingNormalization.DividesBy1PlusLogUniqueWordCount">
            <summary>
            Divides the rank by 1 + the logarithm of the number of unique words in document.
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlRankingNormalization.DivideByItselfPlusOne">
            <summary>
            Divides the rank by itself + 1.
            </summary>
        </member>
        <member name="T:Npgsql.NpgsqlTextFunctions">
            <summary>
            Use this class in LINQ queries to generate full-text search expressions using tsvector and tsquery. 
            None of these functions can be called directly.
            See http://www.postgresql.org/docs/current/static/functions-textsearch.html for the latest documentation.
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.AsTsVector(System.String)">
            <summary>
            Cast <paramref name="vector" /> to the tsvector data type.
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.ToTsVector(System.String)">
            <summary>
            Reduce <paramref name="document" /> to tsvector.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-DOCUMENTS
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.ToTsVector(System.String,System.String)">
            <summary>
            Reduce <paramref name="document" /> to tsvector using the text search configuration specified
            by <paramref name="config" />.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-DOCUMENTS
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.AsTsQuery(System.String)">
            <summary>
            Cast <paramref name="query" /> to the tsquery data type.
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.PlainToTsQuery(System.String)">
            <summary>
            Produce tsquery from <paramref name="query" /> ignoring punctuation.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.PlainToTsQuery(System.String,System.String)">
            <summary>
            Produce tsquery from <paramref name="query" /> ignoring punctuation and using the text search
            configuration specified by <paramref name="config" />.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.ToTsQuery(System.String)">
            <summary>
            Normalize words in <paramref name="query" /> and convert to tsquery. If your input
            contains punctuation that should not be treated as text search operators, use 
            <see cref="M:Npgsql.NpgsqlTextFunctions.PlainToTsQuery(System.String)" /> instead.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.ToTsQuery(System.String,System.String)">
            <summary>
            Normalize words in <paramref name="query" /> and convert to tsquery using the text search
            configuration specified by <paramref name="config" />. If your input contains punctuation 
            that should not be treated as text search operators, use <see cref="M:Npgsql.NpgsqlTextFunctions.PlainToTsQuery(System.String,System.String)" /> 
            instead.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-PARSING-QUERIES
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.QueryAnd(System.String,System.String)">
            <summary>
            AND tsquerys together. Generates the "&amp;&amp;" operator.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.QueryOr(System.String,System.String)">
            <summary>
            OR tsquerys together. Generates the "||" operator.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.QueryNot(System.String)">
            <summary>
            Negate a tsquery. Generates the "!!" operator.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.QueryContains(System.String,System.String)">
            <summary>
            Returns whether <paramref name="tsquery1" /> contains <paramref name="tsquery2" />.
            Generates the "@&gt;" operator.
            http://www.postgresql.org/docs/current/static/functions-textsearch.html
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.QueryIsContained(System.String,System.String)">
            <summary>
            Returns whether <paramref name="tsquery1" /> is contained within <paramref name="tsquery2" />.
            Generates the "&lt;@" operator.
            http://www.postgresql.org/docs/current/static/functions-textsearch.html
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.Match(System.String,System.String)">
            <summary>
            This method generates the "@@" match operator.
            http://www.postgresql.org/docs/current/static/textsearch-intro.html#TEXTSEARCH-MATCHING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.SetWeight(System.String,Npgsql.NpgsqlWeightLabel)">
            <summary>
            Assign weight to each element of <paramref name="tsvector" /> and return a new
            weighted tsvector.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.Length(System.String)">
            <summary>
            Returns the number of lexemes in <paramref name="tsvector" />.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.NumNode(System.String)">
            <summary>
            Returns the number of lexemes plus operators in <paramref name="tsquery" />.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.Strip(System.String)">
            <summary>
            Removes weights and positions from <paramref name="tsvector" /> and returns
            a new stripped tsvector.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSVECTOR
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.QueryTree(System.String)">
            <summary>
            Get indexable part of <paramref name="query" />.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsHeadline(System.String,System.String,System.String)">
            <summary>
            Returns a string suitable for display containing a query match.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-HEADLINE
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsHeadline(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a string suitable for display containing a query match using the text
            search configuration specified by <paramref name="config" />.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-HEADLINE
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRank(System.String,System.String)">
            <summary>
            Calculates the rank of <paramref name="vector" /> for <paramref name="query" />.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRank(System.String,System.String,Npgsql.NpgsqlRankingNormalization)">
            <summary>
            Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> while normalizing 
            the result according to the behaviors specified by <paramref name="normalization" />.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRank(System.Single,System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> with custom 
            weighting for word instances depending on their labels (D, C, B or A).
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRank(System.Single,System.Single,System.Single,System.Single,System.String,System.String,Npgsql.NpgsqlRankingNormalization)">
            <summary>
            Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> while normalizing 
            the result according to the behaviors specified by <paramref name="normalization" /> 
            and using custom weighting for word instances depending on their labels (D, C, B or A).
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRankCd(System.String,System.String)">
            <summary>
            Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> using the cover 
            density method.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRankCd(System.String,System.String,Npgsql.NpgsqlRankingNormalization)">
            <summary>
            Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> using the cover
            density method while normalizing the result according to the behaviors specified by 
            <paramref name="normalization" />.
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRankCd(System.Single,System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> using the cover 
            density method with custom weighting for word instances depending on their labels (D, C, B or A).
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRankCd(System.Single,System.Single,System.Single,System.Single,System.String,System.String,Npgsql.NpgsqlRankingNormalization)">
            <summary>
            Calculates the rank of <paramref name="vector" /> for <paramref name="query" /> using the cover density
            method while normalizing the result according to the behaviors specified by <paramref name="normalization" /> 
            and using custom weighting for word instances depending on their labels (D, C, B or A).
            http://www.postgresql.org/docs/current/static/textsearch-controls.html#TEXTSEARCH-RANKING
            </summary>
        </member>
        <member name="M:Npgsql.NpgsqlTextFunctions.TsRewrite(System.String,System.String,System.String)">
            <summary>
            Searchs <paramref name="query" /> for occurrences of <paramref name="target" />, and replaces 
            each occurrence with a <paramref name="substitute" />. All parameters are of type tsquery.
            http://www.postgresql.org/docs/current/static/textsearch-features.html#TEXTSEARCH-MANIPULATE-TSQUERY
            </summary>
        </member>
        <member name="T:Npgsql.NpgsqlWeightLabel">
            <summary>
            Label given to positions in vectors.
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlWeightLabel.D">
            <summary>
            D (Default).
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlWeightLabel.C">
            <summary>
            C
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlWeightLabel.B">
            <summary>
            B
            </summary>
        </member>
        <member name="F:Npgsql.NpgsqlWeightLabel.A">
            <summary>
            A
            </summary>
        </member>
        <member name="T:Npgsql.SqlGenerators.NameAndInputExpression">
            <summary>
            Represents an InputExpression and what alias it will have when used in a FROM clause
            </summary>
        </member>
        <member name="T:Npgsql.SqlGenerators.PendingProjectsNode">
            <summary>
            A tree of subqueries, used when evaluating SQL text for DbPropertyExpressions in SqlSelectGenerator.
            See SqlSelectGenerator.Visit(DbPropertyExpression) for more information.
            </summary>
        </member>
        <member name="M:Npgsql.SqlGenerators.SqlBaseGenerator.DateAdd(System.String,System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpression})">
            <summary>
            PostgreSQL has no direct functions to implements DateTime canonical functions
            http://msdn.microsoft.com/en-us/library/bb738626.aspx
            http://msdn.microsoft.com/en-us/library/bb738626.aspx
            but we can use workaround:
            expression + number * INTERVAL '1 number_type'
            where number_type is the number type (days, years and etc)
            </summary>
            <param name="functionName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Npgsql.SqlGenerators.StringPair">
            <summary>
            Used for lookup in a Dictionary, since Tuple is not available in .NET 3.5
            </summary>
        </member>
        <member name="M:Npgsql.SqlGenerators.OperatorExpression.Negate(Npgsql.SqlGenerators.VisitedExpression,System.Boolean)">
            <summary>
            Negates an expression.
            If possible, replaces the operator of exp if exp is a negatable OperatorExpression,
            else return a new OperatorExpression of type Not that wraps exp.
            </summary>
        </member>
    </members>
</doc>
